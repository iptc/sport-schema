@prefix rdf:       <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:      <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:       <http://www.w3.org/2002/07/owl#> .
@prefix xsd:       <http://www.w3.org/2001/XMLSchema#> .
@prefix dcterms:   <http://purl.org/dc/terms/> .
@prefix sh:        <http://www.w3.org/ns/shacl#> .
@prefix skos:      <http://www.w3.org/2004/02/skos/core#> .
@prefix sport:     <https://sportschema.org/ontologies/main/> .
@prefix spgolf:    <https://sportschema.org/ontologies/golf/> .
@prefix spfacet:   <https://sportschema.org/ontologies/sport-facets/> .
@prefix spstat:    <https://sportschema.org/ontologies/corestatistics/> .
# sport-specific ontologies:
@prefix spespstat: <https://sportschema.org/ontologies/esports/> .
@prefix spsocstat: <https://sportschema.org/ontologies/soccer/> .

##### SHACL Shapes for validating Sports RDF data #####

sport:ActionShape
  a sh:NodeShape ;
  sh:targetClass sport:Action ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  sh:property [
    sh:path sport:participation ;
    sh:or (
      [ sh:class sport:Participation ]
      [ sh:class sport:IndividualParticipation]
      [ sh:class sport:TeamParticipation ]
    )
  ] ;
  sh:property [
    sh:path sport:actionInEvent ;
    sh:class sport:Event
  ] ;
  sh:property [
    sh:path sport:actionDateTime ;
    sh:datatype xsd:dateTime
  ] ;
  sh:property [
    sh:path sport:actionType ;
    sh:node sport:NewsCodesSportActionTypeShape
  ] ;
  sh:property [
    sh:path sport:angle ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:bodyPart ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:class ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportActionClassShape ;
  ] ;
  sh:property [
    sh:path sport:comment ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:distance ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:endLocation ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:fieldLocation ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:goalLocation ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:lastModified ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:minutesElapsed ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:oppositePlay ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:passDescription ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:passMethod ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:passType ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:infractionLevel ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:infractionType ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:periodValue ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:personReplacingPosition ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:recipientType ;
    # sh:datatype xsd:string ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:result ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:saveMethod ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:saveType ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:scoreAttemptDescription ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:scoreAttemptResult ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:scoreAttemptSide ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:scoreAttemptSituation ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:scoreAttemptType ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:sequenceNumber ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:shotDistance ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:shotDistanceUnits ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:shotType ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:startLocation ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:substitutionReason ;
    # TODO decide whether this sh:or is a cool feature or a dirty hack...
    # really values should be only URIs or strings
    sh:or (
      [ sh:datatype xsd:string ]
      [ sh:nodeKind sh:IRI ]
    )
  ] ;
  sh:property [
    sh:path sport:timeAddition ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:timeAddition ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:timeElapsed ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:timeRemaining ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:zone ;
    sh:datatype xsd:string ;
  ] ;
  # golf properties (these should inherit from ParticipatableThing...)
  sh:property [
    sh:path spgolf:distanceRemaining ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:hole ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:round ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:score ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:stroke ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:shotDistance ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:shotLocation ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:totalStrokes ;
    sh:datatype xsd:string ;
  ] .

sport:AgentShape
  a sh:NodeShape ;
  sh:targetClass sport:Agent ;
  # sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) .

sport:AssociateParticipationShape rdf:type sh:NodeShape  ;
  a sh:NodeShape ;
  sh:targetClass sport:AssociateParticipation ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) .

sport:AssociateShape
  a sh:NodeShape ;
  sh:targetClass sport:Associate ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) .

sport:AssociateRelationshipShape
  a sh:NodeShape ;
  sh:targetClass sport:AssociateRelationship ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  sh:property [
    sh:path sport:associate ;
    sh:class sport:Associate ;
  ] ;
  sh:property [
    sh:path sport:associateFor ;
    sh:class sport:Agent ;
  ] .

sport:AthleteShape
  a sh:NodeShape ;
  sh:targetClass sport:Athlete ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  # Properties inherited from Individual
  sh:property [
    sh:path sport:dateOfBirth ;
    sh:datatype xsd:date ;
  ] ;
  sh:property [
    sh:path sport:nationality ;
    sh:datatype xsd:string ;
  ] .

sport:CompetitionShape
  a sh:NodeShape ;
  sh:targetClass sport:Competition ;
  # sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  sh:property [
    sh:path sport:sport ;
    sh:class skos:Concept ;
    # sh:minCount 1 ; # removed for now because it breaks most of our examples!
    sh:node sport:NewsCodesMediaTopicShape ;
  ] ;
  sh:property [
    sh:path sport:competitionType ;
    sh:class skos:Concept ;
    sh:node sport:SportConceptShape
  ] ;
  sh:property [
    sh:path sport:parent ;
    sh:class sport:Competition
  ] ;
  sh:property [
    sh:path sport:participation ;
    sh:class sport:Participation
  ] ;
  sh:property [
    sh:path sport:containsCompetitionPhase ;
    sh:class sport:CompetitionPhase
  ] ;
  sh:property [
    sh:path sport:containsEvent ;
    sh:class sport:Event
  ] ;
  sh:property [
    sh:path sport:governedBy ;
    sh:class sport:GoverningBody
  ] ;
  sh:property [
    sh:path sport:sport ;
    sh:pattern "^http://cv.iptc.org/newscodes/mediatopic/" ;
    sh:flags   "i"  # Ignore case
  ] ;
  # sport facets on Competition from https://sportschema.org/ontologies/sport-facets/
  sh:property [
    sh:path spfacet:ageclass ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spfacet:alpineskiingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:artisticgymtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:billiardtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:bmxfreestyletype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:canoekayaktype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:cyclingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:distance ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spfacet:dogracingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:equestriantype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:horseracingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:fencingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:figureskatingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:flyingdisctype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:freestyleskiingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:gender ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:jaialaitype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:motorcarracingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:motorcyclingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:mountainbikingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:nordicskiingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:crosscountryskiingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:parasport ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:parasporttype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:platformheight ;
    sh:datatype xsd:string
  ] ;
  sh:property [
    sh:path spfacet:racetime ;
    sh:datatype xsd:string
  ] ;
  sh:property [
    sh:path spfacet:racetype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:rhythmgymtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:rowingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:sailingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:shootingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:soccertype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:snowboardingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:swimmingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:teamsize ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spfacet:waterskiingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:weightclasstype ;
    sh:datatype xsd:string
  ] ;
  sh:property [
    sh:path spfacet:weightliftingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] ;
  sh:property [
    sh:path spfacet:windsurfingtype ;
    sh:class skos:Concept ;
    sh:node sport:FacetValueShape
  ] .

sport:CompetitionPhaseShape
  a sh:NodeShape ;
  sh:targetClass sport:CompetitionPhase ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  sh:property [
    sh:path sport:sport ;
    sh:class skos:Concept ;
    # sh:minCount 1 ; # removed for now because it breaks most of our examples!
    sh:node sport:NewsCodesMediaTopicShape ;
  ] ;
  sh:property [
    sh:path sport:participation ;
    sh:class sport:Participation
  ] ;
  sh:property [
    sh:path sport:competitionFormat ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportCompetitionFormatShape
  ] ;
  sh:property [
    sh:path sport:parent ;
    sh:class sport:CompetitionPhase ;
  ] ;
  sh:property [
    sh:path sport:competitionPhaseType ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportCompetitionPhaseTypeShape
  ] ;
  sh:property [
    sh:path sport:phaseInCompetition ;
    sh:class sport:Competition
  ] .

sport:CompetitorParticipationShape rdf:type sh:NodeShape  ;
  a sh:NodeShape ;
  sh:targetClass sport:CompetitorParticipation ;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  # properties inherited from sport:Participation
  sh:property [
    sh:path sport:eventOutcome ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportEventOutcomeShape
  ] ;
  sh:property [
    sh:path sport:eventOutcomeType ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportEventOutcomeTypeShape
  ] ;
  sh:property [
    sh:path sport:positionEvent ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportPositionShape
  ] ;
  sh:property [
    sh:path sport:participationBy ;
    sh:or (
      [ sh:class sport:Agent ]
      [ sh:class sport:Individual ]
      [ sh:class sport:Associate ]
      [ sh:class sport:Athlete ]
      [ sh:class sport:Official ]
    )
  ] ;
  sh:property [
    sh:path sport:rank ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:role ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:score ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:scoreType ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:scoreUnits ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportScoreUnitsShape
  ] .
 
sport:EventShape rdf:type sh:NodeShape ;
  sh:targetClass sport:Event ;
  sh:closed true ;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  sh:property [
    sh:path sport:participation ;
    sh:or (
      [ sh:class sport:Participation ]
      [ sh:class sport:IndividualParticipation ]
      [ sh:class sport:TeamParticipation ]
    )
  ] ;
  sh:property [
    sh:path sport:location ;
    sh:class sport:Site ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:eventInCompetition ;
    sh:class sport:Competition ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:eventInCompetitionPhase ;
    sh:class sport:CompetitionPhase ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:eventParticipation ;
    sh:class sport:Participation ;
    # sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:attendance ;
    sh:datatype xsd:string ;
    # sh:datatype xsd:integer ;
  ] ;
  sh:property [
    sh:path sport:startDateTime ;
    sh:datatype xsd:dateTime ;
  ] ;
  sh:property [
    sh:path sport:endDateTime ;
    sh:datatype xsd:dateTime ;
  ] ;
  sh:property [
    sh:path sport:sport ;
    sh:class skos:Concept ;
    # sh:minCount 1 ; # removed for now because it breaks most of our examples!
    sh:node sport:NewsCodesMediaTopicShape ;
  ] ;
  sh:property [
    sh:path sport:eventOutcomeType ;
    sh:node sport:NewsCodesSportEventOutcomeTypeShape
  ] ;
  sh:property [
    sh:path sport:eventStatus ;
    sh:node sport:NewsCodesSportEventStatusShape
  ] ;
  sh:property [
    sh:path sport:parent ;
    sh:class sport:Event
  ] ;
  # sport facet properties
  sh:property [
    sh:path spfacet:weightClassType ;
    sh:datatype xsd:string
  ] .

sport:FacetValueShape rdf:type sh:NodeShape;
    sh:property [
        sh:path skos:inScheme ;
        sh:hasValue <http://cv.iptc.org/newscodes/asportfacetvalue/> ;
        sh:maxCount 1 ;
    ] .

sport:GoverningBodyShape rdf:type sh:NodeShape  ;
  a sh:NodeShape ;
  sh:targetClass sport:GoverningBody ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) .

sport:IndividualShape rdf:type sh:NodeShape  ;
  a sh:NodeShape ;
  sh:targetClass sport:Individual ;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  # Properties defined on Individual
  sh:property [
    sh:path sport:nationality ;
    sh:datatype xsd:string ;
  ] .

sport:IndividualMembershipShape
  sh:targetClass sport:IndividualMembership ;
  a sh:NodeShape ;
  sh:property [
    sh:path sport:positionRegular ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportPositionShape ;
  ] ;
  sh:property [
    sh:path sport:uniformNumber ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:member ;
    sh:or (
      [ sh:class sport:Individual ]
      [ sh:class sport:Associate ]
      [ sh:class sport:Athlete ]
      [ sh:class sport:Official ]
    )
  ] ;
  sh:property [
    sh:path sport:membershipOf ;
    sh:class sport:Team ;
  ] .

sport:IndividualParticipationShape rdf:type sh:NodeShape  ;
  a sh:NodeShape ;
  sh:targetClass sport:IndividualParticipation ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  # properties defined on IndividualParticipation
  sh:property [
    sh:path sport:uniformNumberEvent ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:playerStatus ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportPlayerStatusShape
  ] ;
  # properties defined on Participation
  sh:property [
    sh:path sport:eventOutcome ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportEventOutcomeShape
  ] ;
  sh:property [
    sh:path sport:eventOutcomeType ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportEventOutcomeTypeShape
  ] ;
  sh:property [
    sh:path sport:positionEvent ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportPositionShape
  ] ;
  sh:property [
    sh:path sport:participationBy ;
    sh:class sport:Athlete ;
  ] ;
  sh:property [
    sh:path sport:participationSplit ;
    sh:class sport:ParticipationSplit ;
  ] ;
  sh:property [
    sh:path sport:rank ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:role ;
    sh:nodeKind sh:IRI ;
  ] ;
  sh:property [
    sh:path sport:score ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:scoreType ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:scoreUnits ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportScoreUnitsShape
  ] ;
  sh:property [
    sh:path sport:teamParticipation ;
    sh:class sport:TeamParticipation ;
  ] ;
  # properties defined on CompetitorParticipation by core statistics ontology
  sh:property [
    sh:path spstat:eventsStarted ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:rating ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:resultEffect ;
    sh:node sport:NewsCodesSportResultEffectShape
   ] ;
  sh:property [
    sh:path spstat:resultEffectTarget ;
    sh:class sport:ParticipatableThing ;
  ] ;
  sh:property [
    sh:path spstat:timePlayedTotal ;
    sh:datatype xsd:string ;
  ] ;
  # properties defined on CompetitorParticipation by soccer ontology
  sh:property [
    sh:path spsocstat:aerialsWon ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:assistsTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:catchesPunches ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:cautionsTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:clearancesSuccessful ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:cornerKicks ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:crosses18Yard ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:crosses18YardPlus ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:ejectionsTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:freeKicks ;
    sh:datatype xsd:string ;
  ] ;
  # TODO remove typo (from SportsML)
  sh:property [
    sh:path spsocstat:foulsCommited ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:foulsCommitted ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:foulsSuffered ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:goalsAgainstTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:goalsHead ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:goalsLeftFoot ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:goalsOwn ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:goalsPenaltyShotAllowed ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:goalsRightFoot ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:goalsTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:interceptions ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:passesComplete ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:passesCompleteLong ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:passesComplete3rdFinal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:passesIncomplete ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:passesTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:saves ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:savePercentage ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:shotsBlockedCross ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:shotsBlockedOutfielder ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:shotsOffGoalTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:shotsOnGoalTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:shotsPenaltyShotAllowed ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:shotsPenaltyShotMissed ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:shotsPenaltyShotScored ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:shotsTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:shutouts ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:tacklesLost ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:tacklesTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:tacklesWon ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:touches ;
    sh:datatype xsd:string ;
  ] ;
  # properties defined on CompetitorParticipation by esports ontology
  sh:property [
    sh:path spespstat:ADR ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spespstat:assist ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spespstat:deaths ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spespstat:FKdiff ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spespstat:flashassist ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spespstat:headshot ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spespstat:KAST ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spespstat:kills ;
    sh:datatype xsd:string ;
  ] ;
  # Properties defined on IndividualParticipation by golf ontology
  sh:property [
    sh:path spgolf:totalStrokes ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:round ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:strokes ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:score ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:scoreAgainstPar ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:holeType ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportGolfHoleTypeShape
  ] ;
  sh:property [
    sh:path spgolf:hole;
    sh:datatype xsd:string ;
  ] .

sport:MembershipShape rdf:type sh:NodeShape  ;
  a sh:NodeShape ;
  sh:targetClass sport:Membership ;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  sh:property [
    sh:path sport:startDate ;
    sh:datatype xsd:date ;
  ] ;
  sh:property [
    sh:path sport:endDate ;
    sh:datatype xsd:date ;
  ] ;
  sh:property [
    sh:path sport:competitionMembership ;
    sh:class sport:Competition ;
  ] .

sport:NewsCodesMediaTopicShape rdf:type sh:NodeShape;
    sh:property [
        sh:path skos:inScheme ;
        sh:hasValue <http://cv.iptc.org/newscodes/mediatopic/> ;
        sh:maxCount 1 ;
    ] .

sport:NewsCodesSportActionClassShape rdf:type sh:NodeShape;
    sh:property [
        sh:path skos:inScheme ;
        sh:hasValue <http://cv.iptc.org/newscodes/spactionclass/> ;
        sh:maxCount 1 ;
    ] .

sport:NewsCodesSportCompetitionFormatShape
    sh:property [
        sh:path skos:inScheme ;
        sh:hasValue <http://cv.iptc.org/newscodes/sptournamentform/> ;
        sh:maxCount 1 ;
    ] .

sport:NewsCodesSportCompetitionPhaseTypeShape
    sh:property [
        sh:path skos:inScheme ;
        sh:hasValue <http://cv.iptc.org/newscodes/sptournamentphase/> ;
        sh:maxCount 1 ;
    ] .

sport:NewsCodesSportCompetitionScopeShape
    sh:property [
        sh:path skos:inScheme ;
        sh:hasValue <http://cv.iptc.org/newscodes/spcompetitionscope/> ;
        sh:maxCount 1 ;
    ] .

sport:NewsCodesSportConceptShape rdf:type sh:NodeShape;
    sh:property [
        sh:path skos:inScheme ;
        sh:hasValue <http://cv.iptc.org/newscodes/spct/> ;
        sh:maxCount 1 ;
    ] .

sport:NewsCodesSportEventOutcomeShape rdf:type sh:NodeShape;
    sh:property [
        sh:path skos:inScheme ;
        sh:hasValue <http://cv.iptc.org/newscodes/speventoutcome/> ;
        sh:maxCount 1 ;
    ] .

sport:NewsCodesSportEventOutcomeTypeShape rdf:type sh:NodeShape;
    sh:property [
        sh:path skos:inScheme ;
        sh:hasValue <http://cv.iptc.org/newscodes/speventoutcometype/> ;
        sh:maxCount 1 ;
    ] .

sport:NewsCodesSportGolfHoleType rdf:type sh:NodeShape;
    sh:property [
        sh:path skos:inScheme ;
        sh:hasValue <http://cv.iptc.org/newscodes/spgolholetype/> ;
        sh:maxCount 1 ;
    ] .

sport:NewsCodesSportPlayerStatusShape rdf:type sh:NodeShape;
    sh:property [
        sh:path skos:inScheme ;
        sh:hasValue <http://cv.iptc.org/newscodes/spplayerstatus/> ;
        sh:maxCount 1 ;
    ] .

sport:NewsCodesSportPositionShape rdf:type sh:NodeShape;
    sh:property [
        sh:path skos:inScheme ;
        sh:in (
            <http://cv.iptc.org/newscodes/sphorposition/>
            <http://cv.iptc.org/newscodes/spichposition/>
            <http://cv.iptc.org/newscodes/spsocposition/>
            <http://cv.iptc.org/newscodes/spsocascpos/>
            <http://cv.iptc.org/newscodes/vendoffpos/>
        ) ;
        sh:maxCount 1 ;
    ] .

sport:NewsCodesSportResultEffectShape rdf:type sh:NodeShape;
    sh:property [
        sh:path skos:inScheme ;
        sh:hasValue <http://cv.iptc.org/newscodes/spresulteffect/> ;
        sh:maxCount 1 ;
    ] .

sport:NewsCodesSportScoreUnitsShape rdf:type sh:NodeShape;
    sh:property [
        sh:path skos:inScheme ;
        sh:hasValue <http://cv.iptc.org/newscodes/spscoreunits/> ;
        sh:maxCount 1 ;
    ] .

sport:OfficialShape rdf:type sh:NodeShape  ;
  a sh:NodeShape ;
  sh:targetClass sport:Official ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) .

sport:OfficialParticipationShape rdf:type sh:NodeShape  ;
  a sh:NodeShape ;
  sh:targetClass sport:OfficialParticipation ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  sh:property [
    sh:path sport:participationBy ;
    sh:class sport:Official
  ] ;
  sh:property [
    sh:path sport:positionEvent ;
    sh:node sport:NewsCodesSportPositionShape
  ] .

sport:ParticipatableThingShape
  sh:targetClass sport:ParticipatableThing ;
  # sh:closed true ;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  sh:property [
    sh:path sport:sport ;
    sh:class skos:Concept ;
    # sh:minCount 1 ; # removed for now because it breaks most of our examples!
    sh:node sport:NewsCodesMediaTopicShape ;
  ] ;
  sh:property [
    sh:path sport:parent ;
    sh:class sport:ParticipatableThing
  ] ;
  # golf-specific ParticipatableThing properties
  sh:property [
    sh:path spgolf:round ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:hole ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:shotLocation ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:shotDistance ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:distanceRemnaining ;
    sh:datatype xsd:string ;
  ] .

sport:ParticipationShape
  sh:targetClass sport:TeamParticipation, sport:IndividualParticipation, sport:AssociateParticipation, sport:OfficialParticipation ;
  a sh:NodeShape ;
  sh:property [
    sh:path sport:eventOutcome ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportEventOutcomeShape
  ] ;
  sh:property [
    sh:path sport:eventOutcomeType ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportEventOutcomeTypeShape
  ] ;
  sh:property [
    sh:path sport:positionEvent ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportPositionShape
  ] ;
  # If we define this here, it breaks the validation on the subclasses (eg TeamParticipation participationBy Team)
  #sh:property [
  #  sh:path sport:participationBy ;
  #  sh:class sport:Agent ;
  #] ;
  sh:property [
    sh:path sport:rank ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:score ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:scoreType ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:scoreUnits ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportScoreUnitsShape
  ] .
 
sport:ParticipationSplitShape rdf:type sh:NodeShape  ;
  a sh:NodeShape ;
  sh:targetClass sport:ParticipationSplit ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  # properties defined on participationSplit
  sh:property [
    sh:path sport:participationSplitType ;
    sh:node sport:NewsCodesSportCompetitionScopeShape
  ] ;
  # we can have splits within splits (defined on Participation parent)
  sh:property [
    sh:path sport:participationSplit ;
    sh:class sport:ParticipationSplit ;
  ] ;
  sh:property [
    sh:path sport:participationBy ;
    sh:or (
      [ sh:class sport:Agent ]
      [ sh:class sport:Individual ]
      [ sh:class sport:Associate ]
      [ sh:class sport:Athlete ]
      [ sh:class sport:Official ]
    )
  ] ;
  sh:property [
    sh:path sport:eventOutcome ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportEventOutcomeShape
  ] ;
  sh:property [
    sh:path sport:eventOutcomeType ;
    sh:class skos:Concept ;
    sh:node sport:NewsCodesSportEventOutcomeTypeShape
  ] ;
  sh:property [
    sh:path sport:rank ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:score ;
    sh:datatype xsd:string ;
  ] ;
  # core statistics properties
  sh:property [
    sh:path spstat:eventsPlayed ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:losses ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:pointsScoredAgainst ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:pointsScoredFor ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:standingPoints ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:ties ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:wins ;
    sh:datatype xsd:string ;
  ] ;
  # golf properties
  sh:property [
    sh:path spgolf:score ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:totalStrokes ;
    sh:datatype xsd:string ;
  ] .

sport:SiteShape rdf:type sh:NodeShape  ;
  a sh:NodeShape ;
  sh:targetClass sport:Site ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) .

sport:TeamShape rdf:type sh:NodeShape  ;
  a sh:NodeShape ;
  sh:targetClass sport:Team ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) .

sport:TeamMembershipShape
  sh:targetClass sport:TeamMembership ;
  a sh:NodeShape ;
  sh:property [
    sh:path sport:member ;
    sh:class sport:Team ;
  ] ;
  sh:property [
    sh:path sport:membershipOf ;
    sh:class sport:Club ;
  ] .


sport:TeamParticipationShape rdf:type sh:NodeShape  ;
  a sh:NodeShape ;
  sh:targetClass sport:TeamParticipation ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  sh:property [
    sh:path sport:alignment ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path sport:eventOutcome ;
    sh:node sport:NewsCodesSportEventOutcomeShape
  ] ;
  sh:property [
    sh:path sport:participationBy ;
    sh:class sport:Team ;
  ] ;
  sh:property [
    sh:path sport:participationSplit ;
    sh:class sport:ParticipationSplit ;
  ] ;
  sh:property [
    sh:path sport:rank ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:resultEffect ;
    sh:node sport:NewsCodesSportResultEffectShape
   ] ;
  sh:property [
    sh:path spstat:resultEffectTarget ;
    sh:or (
     [ sh:datatype xsd:string ; ]
     [ sh:class sport:ParticipatableThing ; ]
    )
  ] ;
  sh:property [
    sh:path sport:score ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:eventsPlayed ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:losses ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:pointsDifference ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:pointsScoredAgainst ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:pointsScoredFor ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:scoreOpposing ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:seriesScore ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:seriesScoreOpposing ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:standingPoints ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:ties ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:wins ;
    sh:datatype xsd:string ;
  ] ;
  # soccer stats properties
  sh:property [
    sh:path spsocstat:cautionsTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:clearancesSuccessful ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:cornerKicks ;
    sh:datatype xsd:string ;
  ] ;
  # TODO remove typo (inherited from SportsML)
  sh:property [
    sh:path spsocstat:foulsCommited ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:foulsCommitted ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:freeKicks ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:goalsTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:goalsAgainstTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:interceptions ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:lineFormation ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:offsides ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:passesTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:shotsBlocked ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:shotsOffGoalTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:shotsOnGoalTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:shotsTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:shutouts ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:tacklesLost ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:tacklesWon ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:tacklesWonPercentage ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spsocstat:tacklesTotal ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spstat:timeOfPossessionPercentage ;
    sh:datatype xsd:string ;
  ] .

# sport-specific objects and properties

# golf - iptc-sport-golf.ttl

sport:GolfCourseShape rdf:type sh:NodeShape  ;
  a sh:NodeShape ;
  sh:targetClass sport:GolfCourse ;
  sh:closed true;
  sh:ignoredProperties ( rdf:type rdfs:label ) ;
  sh:property [
    sh:path spgolf:courseYardage ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:coursePar ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:courseRating ;
    sh:datatype xsd:string ;
  ] ;
  sh:property [
    sh:path spgolf:slopeRating ;
    sh:datatype xsd:string ;
  ] .

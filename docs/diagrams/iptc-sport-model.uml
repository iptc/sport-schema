@startuml
!theme cerulean-outline

' IPTC Sport Model - last updated 2022-10-05

' RDF Classes defined in our ontology:
class Action {
  rdfs:label : string
}

class Agent {
  rdfs:label : string
}

class Associate {
}

class Athlete {
}

class ParticipatableThing {
  sport : CV Value
}

class Competition {
  rdfs:label : string
  competitionType : CV Value
}

class CompetitorParticipation {
  eventOutcome : CV Value
  rank : string
  score : string 
  scoreUnits : CV Value 
}

class CompetitionPhase {
  rdfs:label : string
  sport : CV Value
  competitionFormat : CV Value
  competitionPhaseType : CV Value
}

class Event {
  rdfs:label : string
  sport : CV Value
  eventOutcomeType : CV Value
  attendance : integer
  startDateTime : dateTime
  endDateTime : dateTime
}

class GoverningBody {
  rdfs:label : string
}

class Individual {
  rdfs:label : string
  nationality : string
  dateOfBirth : date
}

class IndividualMembership {
  uniformNumber : integer
  positionRegular : CV Value
}

class IndividualParticipation {
  playerStatus : CV Value
}

class AssociateParticipation {
}

class Membership {
  rdfs:label : string
  startDate : date
  endDate : date
}

class Official {
}

class OfficialParticipation {
}

class Participation {
  positionEvent : CV Value
}

class ParticipationSplit {
  participationSplitType : CV Value
}

class Site {
  rdfs:label : string
}

class Team {
}

class TeamParticipation {
  alignment : CV Value
}

' subclass relationships

ParticipatableThing <|-- Competition
ParticipatableThing <|-- Event
ParticipatableThing <|-- Action
Competition <|-- CompetitionPhase
CompetitorParticipation <|-- TeamParticipation
CompetitorParticipation <|-- IndividualParticipation
Participation <|-- CompetitorParticipation
Participation <|-- OfficialParticipation
Participation <|-- AssociateParticipation
Membership <|-- IndividualMembership
Agent <|-- Team
Agent <|-- Individual
Individual <|-- Athlete
Individual <|-- Associate
Individual <|-- Official

' Object properties - relationships between classes

ParticipatableThing .. Participation : > participation
ParticipatableThing .. ParticipatableThing : > parent

' can we really get rid of all of these...??
'CompetitionPhase .. CompetitionPhase : > competitionPhase
'Event .. Event : > subEvent

Action .. Event : > actionInEvent
Event .. Competition : > eventInCompetition
Event .. CompetitionPhase : > eventInCompetitionPhase
CompetitionPhase .. Competition : > phaseInCompetition

Competition .. GoverningBody : > governedBy
Event .. Site :  > site
IndividualMembership .. Individual : > membershipBy
Participation .. Agent : > participationBy
Participation .. ParticipationSplit : participationSplit
IndividualMembership .. Team : > membershipOf
@enduml
